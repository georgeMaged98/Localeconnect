version: '3.8'
services:
  itinerary-postgres-service:
    image: postgres:latest
    container_name: itinerary-postgres-service
    environment:
      POSTGRES_USER: localeconnect
      POSTGRES_PASSWORD: lssa2324app
      POSTGRES_DB: itineraryDB
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - localeconnect-network
    restart: unless-stopped

  postgres-service:
    image: postgres:latest
    container_name: postgres-service
    environment:
      POSTGRES_USER: localeconnect
      POSTGRES_PASSWORD: lssa2324app
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - localeconnect-network
    restart: unless-stopped


  user-postgres-service:
    image: postgres:latest
    container_name: user-postgres-service
    environment:
      POSTGRES_USER: localeconnect
      POSTGRES_PASSWORD: lssa2324app
      POSTGRES_DB: userDB
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - localeconnect-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - localeconnect-network
    restart: unless-stopped

  meetup-service:
    image: georgemaged/meetup-service:latest
    pull_policy: always
    container_name: meetup-service
    ports:
      - "7001:7001"
    environment:
      - DB_HOST=postgres-service
      - EUREKA_SERVER_ADDRESS=http://discovery-server:8761/eureka
    networks:
      - localeconnect-network
    depends_on:
      - postgres-service
      - discovery-server
      - api-gateway

  user-service:
    image: georgemaged/user-service:latest
    pull_policy: always
    container_name: user-service
    ports:
      - "8084:8084"
    environment:
      - DB_HOST=postgres-service
      - EUREKA_SERVER_ADDRESS=http://discovery-server:8761/eureka
    networks:
      - localeconnect-network
    depends_on:
      - postgres-service
      - discovery-server
      - api-gateway

  itinerary-service:
    image: georgemaged/itinerary-service:latest
    pull_policy: always
    container_name: itinerary-service
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres-service
      - EUREKA_SERVER_ADDRESS=http://discovery-server:8761/eureka
    networks:
      - localeconnect-network
    depends_on:
      - postgres-service
      - discovery-server
      - api-gateway

  discovery-server:
    image: 'georgemaged/discovery-server:0.0.1'
    container_name: discovery-server
    ports:
      - '8761:8761'
#    healthcheck:
##      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://discovery-server:8761/actuator/health"]
#      test: ["CMD", "curl", "-f", "http://discovery-server:8761/actuator/health"]
#      interval: 10m
#      timeout: 15s
#      retries: 5
    networks:
      - localeconnect-network

  api-gateway:
    image: 'georgemaged/api-gateway:latest'
    container_name: api-gateway
    restart: always
    depends_on:
      - discovery-server
#      discovery-server:
#        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      - EUREKA_SERVER_ADDRESS=http://discovery-server:8761/eureka
    networks:
      - localeconnect-network


networks:
  localeconnect-network:
    driver: bridge

volumes:
  postgres:
  pgadmin: